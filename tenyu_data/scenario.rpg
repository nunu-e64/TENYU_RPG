\
\--------------------------------------
\----------------------------------------
\------【シナリオコマンド】（随時更新）--
\----------------------------------------
\----------------------------------------
\--【トークコマンド】（随時更新）--------
\----------------------------------------
\  @NextPage：強制的に改ページ。ユーザーにボタンを押させたい時に使用
\  			・改ページしたい箇所に入れる。複数行連続入力有効。２回目以降は記述した回数分、白紙のページが続く。例えば@NextPageを3行続けて書くと白紙ページが2回。（ただし白紙ページを挟みたいなら[@NextPage][半角スペースのみの行][@NextPage]を推奨）
\  			・テキストの先頭、末尾で用いた場合も白紙を表示。
\  @Stop:行の途中でテキスト表示を一時停止。一行ずつ表示させたい時に使用。	
\  			・利用例…[一行目][@Stop][二行目][@Stop][三行目]
\  @Quit：トークを強制終了してテキストウィンドウを閉じる。
\  			・デバッグ用コマンド。いちいちコメントアウトするのが面倒くさいときに使用。製品版ではバグのもとになるのであらかじめ取り除いておくことを強く推奨。
\			・使用時には直前で@NextPageの使用を推奨。使用しない場合しばしば直前のコマンドが実行されないままトークが終わってしまう。
\  @BLOCK_BEGIN(name)〜@BLOCK_END：オブジェクトにイベントやテキストを割り当てる
\  			・nameはシステムコマンドであらかじめ指定。
\  			・指定していない時は「Kind-マップ番号-イベントマップデータ番号」例：BLOCK-0-6
\  			・NPC、PANEL、COVER等についても同様（PANELは踏んだとき、PUSHBLOCKは押したときにイベント発生、COVERは4/29現在イベントなし）
\  @COUNT_IF_BEGIN〜@COUNT_CASE(n)*x回〜@COUNT_IF_END
\  			・初めて調べたときはn=1。調べた瞬間に内部でカウントが加算されている。
\			・@COUNT_CASE(ELSE)でElse処理。Else,else,ELSE,-1 のいずれも同じ
\  @FLAG_IF_BEGIN(name)〜@FLAG_CASE(name,n)*x回〜@FLAG_IF_END(name)
\  			・Flag_Setする前に利用した場合、エラーを吐き、値が-2として一致するCASEがあるか探す。
\			※フラグは負数にはなりえない/できないので注意（ほんとに。）
\  @DIR_IF_BEGIN〜@DIR_CASE(方向)*x回〜@DIR_IF_END
\  			・オブジェクトを調べたときのプレイヤーキャラの向きに応じて分岐
\  			・方向引数は@Dir_Setと同じ。（ただしORIGINALはない）
\  @Event(name, times, [arg1, arg2, ...]): "event.rpg"で作成したマクロイベントを呼び出す。
\  			・第一引数はイベント名。
\  			・第二引数は回数。省略可。省略した場合やエラー発生時は1回。timesを使うのは、例えば連続で回転させたい場合など。（例：その場で三回転…@Event(spin, 3)）
\			・第三引数以降は、自作イベント内に作った自作引数への代入値。'['は必須。詳しくはevent.rpgも参照ください。（例：@Event(aaa, 2, [bbb, ccc, 4])）
\----------------------------------------
\----------------------------------------
\--【アクションコマンド】（随時更新）----
\----------------------------------------
\  @Dammy
\		・ダミーコマンド。仕様11を利用してテキスト表示を妨害したいときに利用する。
\  @EventWrap(イベント名, times, [arg1, arg2, ...]):)
\		・背景を暗くして画面全体に広くテキストを表示するモードにする
\		・引数はオリジナルイベントのイベント名（event.rpgに記載）。詳しくは上記@Eventコマンドの説明を読んでください。
\
\		・オリジナルイベント終了時には元のテキストボックスになり、次の行から再開される（※オリジナルイベント末尾に@NextPageを入れることを推奨（その直後にコマンドを入れたときコマンド発動タイミングが狂うことがあるため））
\		・"WRAPモード"でも各種コマンドは使用可能（ただし@TName系などWRAPモード中は無意味なものもある）
\
\  @TName_Add(LEFTorRIGHT, name1, name2, ...)
\  @TName_Dec(LEFTorRIGHT, name1, name2, ...)
\  @TName_Clear(LEFTorRIGHTorALL)
\  @TName_Now(LEFTorRIGHT, [name])
\			・テキスト表示画面に誰が喋っているのかのラベルを表示する。
\			☆このコマンドの引数[name]は他のコマンドと違ってイベントオブジェクトのNameのことではなく、自由に指定できる文字列のことなので注意！
\			・@TName_Add…引数に書いた名前を左右どちらかのラベルに追加する。
\			・@TNAme_Dec…引数に書いた名前を削除します。Addしておらずラベル上に存在しない名前を書いた場合は何も起きない。
\			・@TName_Clear…左右いずれかあるいは両方のラベルを全削除する。
\			・@TName_Now…今喋っているのが誰かを指定。Addしていない名前を書いた場合、自動的にAddされる。
\

\  @AutoPlay_Set(TrueOrFalse, [speed])
\			・テキストのオートプレイのオン/オフを切り替える（※途中WrapモードとBoxモードを切り替えた際AutoPlayに関する情報は引き継がれない=オートプレイ途中にモードを切り替えると手動に戻る）
\			・オンにした時は第二引数にテキストスピードを指定できる（※仕様変更　○テキスト表示が完了してから何ミリ秒で次ページ　×[1バイトあたり何ミリ秒待つか、1~1000]）。省略時及び非負整数以外を指定した場合はデフォルトのスピードが設定される。
\			・なおイベントが終わるたび（=会話終了のたび）AutoPlayは勝手にFalseになる
\	
\  @Dir_Set(name,方向)：NPCやプレイヤーの向きを変える
\  			・第一引数に、"me"等（仕様参照）を指定した場合プレイヤーキャラの向きを変える。それ以外の名前では該当するNPCを探す。
\  			・第二引数は、方向定数（仕様参照）。
\  			・第二引数末尾に指定した数だけ方向を右回転させることができる（例：LEFT-1 UNDER+2 ORIGINAL+3）
\  				・例えば、@Dir_Set(me,right-1)なら、プレイヤーキャラが上を向く。
\  @Visible_Set(name,visible)：オブジェクト,プレイヤー,テキストボックスのVisibleを変える
\			・nameに"TextBox","textbox","TEXTBOX"を指定した場合、テキストボックスの表示/非表示が切り替わる。
\				・ただしテキストボックスのVisibleは会話終了時にFalse、会話開始時にTrueに自動的に切り替わる。
\			・arg[visible]: 'True'or'False'
\  @Pic_Set(name,pickey)：オブジェクトやプレイヤーの絵を変える
\
\  @Alpha_Set(name,alpha)：オブジェクトの透明度を変える(alpha: 0%~100%)　※100%で通常描画
\
\  @Effect_Set(name,effect,num[0]~num[4])：オブジェクトの描画効果を設定。変数の数はeffectによる。（点滅、自動歩行など。要望に合わせて追加予定）
\			・14/09/06現在、PlayerにはBLINKのみ設定可能
\			・arg[effect]:NONE：無効化し同時にAlpha100%に。
\			・arg[effect]:BLINK：点滅
\				・num[0]...下限, num[1]...上限, num[2]...往復時間,　（※1下限と上限は％　※2往復時間を長くしても1/60秒当たりの変化量最小値は1なので一定時間よりも時間は長くならない。綺麗な仕様ではないですね））
\			・arg[effect]:RND_DIR：きょろきょろ
\				・num[0]...向きを変える時間間隔（miliseconds）
\  @Flag_Create(name)：フラグを新しく作る。
\			・0で初期化する。
\			・指定した名前のフラグが既に存在する場合、スルーする。
\	
\  @Flag_Set(name,num)：フラグの番号を変える。
\			・num>=0
\  			・指定した名前のフラグが存在しなければエラー。
\			・numに数字の代わりに'+++','--'と指定することで加減演算子の個数分だけフラグの値を増減させることができる。
\				例：@Flag_Set(talked_people_num, ++)　…　フラグ'talked_people_num'が既に存在する場合値を+2し、存在しない場合初期値2として生成
\					※'++'は+1ではなく+2なので、プログラミング経験者は注意すること。
\					※@Flag_Set(flag, -3)は、「flagの値を-3する」ではなく「flagの値を-3にする」と判断され、エラーになるので注意。
\				・@COUNT_IF_BEGINと組み合わせることで「町の人全員に話しかける」といった条件がフラグが一つで簡単に作れる
\  @Count_Set(name,num)：話しかけた回数を変える。
\			・num>=0
\			・@Flag_Setと同じく++や---も使用可能。
\			※リセットしたい時…num=0（話しかけた瞬間に+1しそれからイベント処理するため）

\  @Position_Set(playername,マップ番号, X, Y, [PicKey])
\			・マップ番号に非負整数以外を指定した場合、マップ番号は現在地のままになる
\			・X,Yに'+','-'のついた数を指定すると、現在地からの相対位置になる（@Window_Move使用時に役立つ）

\  @Position_Set(playername, mapnum, datanum)
\  @Position_Set(playername, eveobjname)
\			・Playerを動かす時はマップを飛び越えての指定も可能
\  @Position_Set(eveobjname, Dx, Dy, TRUEorFALSE)
\			・FALSE…"イベントマップに基づく元々の位置"からの相対位置を指定
\			・TRUE…"現在地"からの相対位置になる
\  @Position_Set(eveobjname, targeteveobjname)
\			・targetに指定できるのは同じマップ上に存在するイベントオブジェクトに限る
\  @Position_Set(eveobjname, datanum)
\			・データ番号しか指定できない。必然的にマップを飛び越えての移動は不可能である。

\  @Wait(miliseconds)
\  			・指定の時間の間、処理を一旦止めて描画をする。一回につき最大10000ms=10秒まで。
\  @Anten(miliseconds)
\  			・指定時間をかけて画面を真っ暗にする。一回につき最大10000ms=10秒まで。
\  			・指定時間を一括管理するために、@Eventの使用を推奨。
\			・指定時間経過後は元の画面に戻るので注意（真っ暗を維持できない）。@Meitenとの併用が前提。
\  @Meiten(miliseconds)
\  			・指定時間をかけて真っ暗な画面を元に戻す。@Antenとの併用が前提。一回につき最大10000ms=10秒まで。
\  			・指定時間を一括管理するために、@Eventの使用を推奨。
\  @BackGround_Change(PicKey, miliseconds)
\			・背景を一枚絵に変える/NULLで戻す（イベント終了時は自動的に戻る）
\			・一枚は事前にsystem.rpgのLoad_Picで読み込みが必要。
\			・一枚絵は中央位置合わせで表示（なんとなくそれがいいと思ったから）
\			・指定時間かけて画面を変更する。milisecondsは最大10000ms=10秒まで。
\  @Jump(name)
\  			・引数には"me"等が指定可能
\  @Walk(name, 向く方向, 移動マス数, [速さ])
\  			・第一引数[name]には"me"等が指定可能。（※プレイヤーキャラまたはNPCのみ）
\  			・第四引数[speed]には"high","middle","low"の三段階が指定可能。省略した場合は"middle"として扱う。
\  			・後ろ向きに歩かせたい時には移動マス数を負数にする。（例：主人公が左を向いて右へ１マス後ずさりする→@Walk(me, LEFT, -1）
\  @Slide(name, 移動方向, 移動マス数, [速さ])
\  			・基本的には@Walkと同じ
\  			・@Walkとの相違点：キャラの向きが変わらない、NPC以外も動かせる
\			・移動マス数には負数も指定可能
\  @FadeWalk(name, 方向, フェードのしかた, [速さ])
\			・一歩だけ。基本的に@Walkと同じ。
\			・フェードのしかた…1=現れる、-1=消える
\  @Window_Shake(回数, 揺れの大きさ)：画面が上下に素早く振動します
\  @Window_MoveTurn(方向、マス数、待機時間、[速さ])
\			・指定した引数の通りにカメラだけを動かします
\			・マス数には負数の指定可能
\  @Window_Move(方向、マス数、[速さ], [Back])
\			・指定した引数の通りにカメラだけを動かします
\			※動かし終わった後はカメラは一瞬で元の位置に戻ります。
\			　その後もカメラ位置を維持したままイベントを進めたい場合、@Position_Setと@Visible_Setを利用してください。
\			・第四引数省略時は指定したマス位置に向かってカメラが動きますが、第四引数に「Back」を指定した場合、指定したマス位置へと戻るカメラワークに変わります
\				・@Position_Setや@Visible_Setと@Window_Moveの順番によっては[Back]オプションを使う必要がある事があります。
\				・逆に言うとコマンド順に気を付ければ出番のないオプションかもしれません。
\
\  @Battle(戦闘背景画像のpic_key, エネミー1, エネミー2, ...)
\			・イベント戦闘自作用
\  @BattleResult_Set(勝利時の実行コマンド, 敗北時の実行コマンド)
\			・次の戦闘で勝ったとき/負けたときの処理を指定する。イベント戦闘自作用。
\			・ちなみにデフォルトでは[敗北時の実行コマンド]」には@GameOverがセットされている。
\
\  @GameOver
\  @GameClear
\  @BackToTitle
\			・見たまんま
\----------------------------------------
\

@PANEL_BEGIN(switch)
	@BattleResult_Set(@Walk(me,left,4), @Walk(me,up,4))
	@Battle(bg_01, エネミーC, エネミーA)		\戦闘開始
	戦闘終了１
	@Stop
	戦闘終了２（@Stopテスト）

	@NextPage
@PANEL_END

@BLOCK_BEGIN(dammy_treasurebox)	\イベント戦闘例
	@Flag_Create(result)
	うわ！箱の中からモンスターが飛び出してきた！
	@Stop
	@BattleResult_Set(@Flag_Set(result, 1), @Flag_Set(result, 2))
	@Battle(bg_01, エネミーC, エネミーC, エネミーC)		\戦闘開始
	@NextPage
	@FLAG_IF_BEGIN(result)
	@FLAG_CASE(result,1)
		@Event(win_battle)
	@FLAG_CASE(result,2)
		@Event(lose_battle)
	@FLAG_IF_END(result)

@BLOCK_END



\--マップ移動系（ドア含む）---------------------------------

@PANEL_BEGIN(PANEL-0-1)
	@Event(map_move, [0, 61, 72, left])
@PANEL_END
@PANEL_BEGIN(PANEL-0-2)
	@Event(map_move, [0, 1, 43, right])
@PANEL_END
@PANEL_BEGIN(door01)
	@Anten(800)
	@Position_Set(me, door02)
	@Position_Set(me, -1, 0, +1)
	@Dir_Set(me, down)
	@Meiten(800)
@PANEL_END
@PANEL_BEGIN(door02)
	@Anten(800)
	@Position_Set(me, door01)
	@Position_Set(me, -1, 0, +1)
	@Dir_Set(me, down)
	@Meiten(800)
@PANEL_END
@PANEL_BEGIN(PANEL-0-7)
	@Event(map_move, [0, 29, 8, left])
@PANEL_END
@PANEL_BEGIN(PANEL-0-8)
	@Event(map_move, [0, 1, 10, right])
@PANEL_END
\----------------------------------------------------------


\--NPC, 看板-----------------------------------------------
@BLOCK_BEGIN(door03)
	@COUNT_IF_BEGIN
	@COUNT_CASE(1)
		今作のシナリオの一部をテストします！
		@NextPage
		@Event(story_dropkick3)
	@COUNT_CASE(else)
		…
		@Stop
		……
		@Stop
		………
		@Stop
		鍵がかかっている
	@COUNT_IF_END
@BLOCK_END
@NPC_BEGIN(Sis)
	@TName_Now(left, 柊)
	わたしたち顔が似てるって？
	家族だもん、当たり前だよ！
@NPC_END
@NPC_BEGIN(Mom)
	@TName_Now(left, 千秋)
	顔や服の色がおかしいって？
	冬仁、やっぱり疲れてるんじゃないの？
@NPC_END

@NPC_BEGIN(Man)
	@Flag_Create(goldenball)
	やあ！いい天気だね
	@NextPage
	
	@FLAG_IF_BEGIN(goldenball)
	@FLAG_CASE(goldenball, 0)
		そこにある看板を調べてごらん
		@NextPage
	@FLAG_CASE(goldenball, 1)

	@Dir_Set(joker, down)
	あ！UFO！
	@NextPage
	@Dir_Set(me, down)
	@Window_Move(down, 9, middle)
	@Position_Set(me, NULL, 0, +9) 
	@Visible_Set(me, false)
	―特に何もない
	@NextPage

	@Position_Set(me, NULL, 0, -9) 
	@Visible_Set(me, true)
	@Window_Move(up, 9, middle, back)
	@Dir_Set(me, ORIGINAL)
	@Dir_Set(joker, ORIGINAL-2)
	ぷぷぷ！うそだよ
	@NextPage
	ところで君、僕によく似ているねえ
	これも何かの縁だ、おじさんのきんのたまをあげよう
	@NextPage
	きんのたま を手に入れた！
	きんのたま をバッグにしまった
	@Flag_Set(goldenball, 2)
		@NextPage
	@FLAG_CASE(goldenball, else)
		右下の家のドアを調べると、本編のイベントの動きを少しだけ見ることができるそうだよ
		@NextPage
	@FLAG_IF_END(goldenball)

@NPC_END

@BLOCK_BEGIN(sign01)

	@COUNT_IF_BEGIN
	@COUNT_CASE(1)
		サンプルマップの世界へようこそ！
		テキストはZキーまたはエンターキーで読み進めることができます
		@NextPage
		はい、できてますね
		マップ上のいろいろなものを調べたり、町の人の話しかけたりするのにもＺキーまたはエンターキーを使います
		@NextPage
		練習してみましょう
		上にいる町の人に話しかけてみてください
		会話が終わったら、もう一度この看板を調べてください
		@Flag_Create(goldenball)
		@Flag_Set(goldenball, 1)
	@COUNT_CASE(Else)
		@FLAG_IF_BEGIN(goldenball)
		@FLAG_CASE(goldenball, 1)
			サンプルマップの世界へようこそ！
			テキストはZキーまたはエンターキーで読み進めることができます
			@NextPage
			はい、できてますね
			マップ上のいろいろなものを調べたり、町の人の話しかけたりするのにもＺキーまたはエンターキーを使います
			@NextPage
			練習してみましょう
			上にいる町の人に話しかけてみてください
			会話が終わったら、もう一度この看板を調べてください
		@FLAG_CASE(goldenball, 2)
			無事、アイテムをもらえたようですね
			残念ながら、Shopは工事中ですので換金はできません
			大事に持っていてくださいね
			@NextPage
			さて、このサンプルマップのクリア条件は、左に見えている宝箱まで到達することです
			@Stop
			頑張ってくださいね
			クリアしても特に何もないですが
			@NextPage
			ちなみにこの町の中で、本編のイベントサンプルを少しだけ見ることもできます
			新しく追加されたモーションや効果に注目ください
			グラフィックが旧版なので、今一つパッとしないのはご容赦ください
		@FLAG_IF_END(goldenball)
	@COUNT_IF_END

@BLOCK_END

@BLOCK_BEGIN(sign02)
	おとくなけいじばん！
	@NextPage
	Shift+↑↓←→…駆け足
	Ctrl+↑↓←→…高速移動（デバッグ用）
	P…次の会話を[自動進行@オートプレイ]にするよ
	キー1~3…押せばわかります
@BLOCK_END

@BLOCK_BEGIN(sign03)
	河川凍結中
	スリップ注意！
@BLOCK_END

@BLOCK_BEGIN(sign04)
	このあたりの木は実は簡単に動かすことができます
	うまく道を作ってくださいね
	身動きが取れなくなったらEscキーでタイトルに戻ってリトライしてください
@BLOCK_END

\----------------------------------------------------------


\--町のゲート----------------------------------------------
@BLOCK_BEGIN(gate_l)
	隣のスイッチを使えばゲートを開閉できそうだ
@BLOCK_END

@BLOCK_BEGIN(gate_r)
	@Flag_Create(gate_open)
	ゲートのスイッチを押してみた。
	@NextPage
	
	@FLAG_IF_BEGIN(gate_open)
	@FLAG_CASE(gate_open, 1)
		ピー
		[門@ゲート]を閉じます
		@NextPage
		@Anten(400)
		@Flag_Set(gate_open, -)
		@Visible_Set(gate_l, true)
		@Meiten(400)

	@FLAG_CASE(gate_open, else)
		ピー
		[門@ゲート]を開きます
		@NextPage
		@Anten(400)
		@Flag_Set(gate_open, +)
		@Visible_Set(gate_l, false)
		@Meiten(400)
	@FLAG_IF_END(gate_open)
@BLOCK_END
\----------------------------------------------------------


@BLOCK_BEGIN(BLOCK-0-56)
	ウソ●キー「…」
@BLOCK_END

@BLOCK_BEGIN(treasurebox)
	イエローグミを見つけた！
	@Stop
	イエローグミを胃の中にしまった
	@NextPage
	@Anten(800)
	@Visible_Set(joker, false)
	@Meiten(800)
@BLOCK_END
@BLOCK_BEGIN(treasurebox2)
	サンプルマップクリアの証 を見つけた！
	@Stop
	サンプルマップクリアの証 をバッグの中にしまった
	@NextPage
	@EventWrap(clear_samplemap)
	@NextPage
@BLOCK_END
@PANEL_BEGIN(PANEL-0-10)
	@Event(ice, [high])
@PANEL_END
@PANEL_BEGIN(PANEL-0-61)
	@Slide(me,right,1,high)
@PANEL_END


\---動く木-------------------------------------------------------\こういう似たような多くの処理をオリジナルイベント(@Event)とExcelでいかに"楽に""少ない行で"作れるかが、考えどころです。重要。
	@PUSHBLOCK_BEGIN(PUSHBLOCK-0-11)
		@Event(push_tree, [11])
	@PUSHBLOCK_END
	@PUSHBLOCK_BEGIN(PUSHBLOCK-0-12)
		@Event(push_tree, [12])
	@PUSHBLOCK_END
	@PUSHBLOCK_BEGIN(PUSHBLOCK-0-13)
		@Event(push_tree, [13])
	@PUSHBLOCK_END
	@PUSHBLOCK_BEGIN(PUSHBLOCK-0-14)
		@Event(push_tree, [14])
	@PUSHBLOCK_END
	@PUSHBLOCK_BEGIN(PUSHBLOCK-0-15)
		@Event(push_tree, [15])
	@PUSHBLOCK_END
	@PUSHBLOCK_BEGIN(PUSHBLOCK-0-16)
		@Event(push_tree, [16])
	@PUSHBLOCK_END
	@PUSHBLOCK_BEGIN(PUSHBLOCK-0-17)
		@Event(push_tree, [17])
	@PUSHBLOCK_END
	@PUSHBLOCK_BEGIN(PUSHBLOCK-0-18)
		@Event(push_tree, [18])
	@PUSHBLOCK_END
	@PUSHBLOCK_BEGIN(PUSHBLOCK-0-19)
		@Event(push_tree, [19])
	@PUSHBLOCK_END
	@PUSHBLOCK_BEGIN(PUSHBLOCK-0-20)
		@Event(push_tree, [20])
	@PUSHBLOCK_END
	@PUSHBLOCK_BEGIN(PUSHBLOCK-0-21)
		@Event(push_tree, [21])
	@PUSHBLOCK_END
	@PUSHBLOCK_BEGIN(PUSHBLOCK-0-22)
		@Event(push_tree, [22])
	@PUSHBLOCK_END
	@PUSHBLOCK_BEGIN(PUSHBLOCK-0-23)
		@Event(push_tree, [23])
	@PUSHBLOCK_END
	@PUSHBLOCK_BEGIN(PUSHBLOCK-0-24)
		@Event(push_tree, [24])
	@PUSHBLOCK_END
	@PUSHBLOCK_BEGIN(PUSHBLOCK-0-25)
		@Event(push_tree, [25])
	@PUSHBLOCK_END
	@PUSHBLOCK_BEGIN(PUSHBLOCK-0-26)
		@Event(push_tree, [26])
	@PUSHBLOCK_END
	@PUSHBLOCK_BEGIN(PUSHBLOCK-0-27)
		@Event(push_tree, [27])
	@PUSHBLOCK_END
	@PUSHBLOCK_BEGIN(PUSHBLOCK-0-28)
		@Event(push_tree, [28])
	@PUSHBLOCK_END
	@PUSHBLOCK_BEGIN(PUSHBLOCK-0-29)
		@Event(push_tree, [29])
	@PUSHBLOCK_END
	@PUSHBLOCK_BEGIN(PUSHBLOCK-0-30)
		@Event(push_tree, [30])
	@PUSHBLOCK_END
	@PUSHBLOCK_BEGIN(PUSHBLOCK-0-31)
		@Event(push_tree, [31])
	@PUSHBLOCK_END
	@PUSHBLOCK_BEGIN(PUSHBLOCK-0-32)
		@Event(push_tree, [32])
	@PUSHBLOCK_END
	@PUSHBLOCK_BEGIN(PUSHBLOCK-0-33)
		@Event(push_tree, [33])
	@PUSHBLOCK_END
	@PUSHBLOCK_BEGIN(PUSHBLOCK-0-34)
		@Event(push_tree, [34])
	@PUSHBLOCK_END
	@PUSHBLOCK_BEGIN(PUSHBLOCK-0-35)
		@Event(push_tree, [35])
	@PUSHBLOCK_END
	@PUSHBLOCK_BEGIN(PUSHBLOCK-0-36)
		@Event(push_tree, [36])
	@PUSHBLOCK_END
	@PUSHBLOCK_BEGIN(PUSHBLOCK-0-37)
		@Event(push_tree, [37])
	@PUSHBLOCK_END
	@PUSHBLOCK_BEGIN(PUSHBLOCK-0-38)
		@Event(push_tree, [38])
	@PUSHBLOCK_END
	@PUSHBLOCK_BEGIN(PUSHBLOCK-0-39)
		@Event(push_tree, [39])
	@PUSHBLOCK_END
	@PUSHBLOCK_BEGIN(PUSHBLOCK-0-40)
		@Event(push_tree, [40])
	@PUSHBLOCK_END
	@PUSHBLOCK_BEGIN(PUSHBLOCK-0-41)
		@Event(push_tree, [41])
	@PUSHBLOCK_END
	@PUSHBLOCK_BEGIN(PUSHBLOCK-0-42)
		@Event(push_tree, [42])
	@PUSHBLOCK_END
	@PUSHBLOCK_BEGIN(PUSHBLOCK-0-43)
		@Event(push_tree, [43])
	@PUSHBLOCK_END
	@PUSHBLOCK_BEGIN(PUSHBLOCK-0-44)
		@Event(push_tree, [44])
	@PUSHBLOCK_END
	@PUSHBLOCK_BEGIN(PUSHBLOCK-0-45)
		@Event(push_tree, [45])
	@PUSHBLOCK_END
	@PUSHBLOCK_BEGIN(PUSHBLOCK-0-46)
		@Event(push_tree, [46])
	@PUSHBLOCK_END
	@PUSHBLOCK_BEGIN(PUSHBLOCK-0-47)
		@Event(push_tree, [47])
	@PUSHBLOCK_END
	@PUSHBLOCK_BEGIN(PUSHBLOCK-0-48)
		@Event(push_tree, [48])
	@PUSHBLOCK_END
	@PUSHBLOCK_BEGIN(PUSHBLOCK-0-49)
		@Event(push_tree, [49])
	@PUSHBLOCK_END
	@PUSHBLOCK_BEGIN(PUSHBLOCK-0-50)
		@Event(push_tree, [50])
	@PUSHBLOCK_END
	@PUSHBLOCK_BEGIN(PUSHBLOCK-0-51)
		@Event(push_tree, [51])
	@PUSHBLOCK_END
	@PUSHBLOCK_BEGIN(PUSHBLOCK-0-52)
		@Event(push_tree, [52])
	@PUSHBLOCK_END
	@PUSHBLOCK_BEGIN(PUSHBLOCK-0-53)
		@Event(push_tree, [53])
	@PUSHBLOCK_END
	@PUSHBLOCK_BEGIN(PUSHBLOCK-0-54)
		@Event(push_tree, [54])
	@PUSHBLOCK_END
	@PUSHBLOCK_BEGIN(PUSHBLOCK-0-55)
		@Event(push_tree, [55])
	@PUSHBLOCK_END
\-------------------------------------------------------------------------




















